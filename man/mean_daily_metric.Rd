% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mean_daily.R
\name{mean_daily_metric}
\alias{mean_daily_metric}
\title{Calculate mean daily metrics from Time Series}
\usage{
mean_daily_metric(
  data,
  metric,
  Variable,
  Weekend.type = Day,
  Datetime.colname = Datetime,
  metric_type = duration_above_threshold,
  prefix = "average_",
  filter.empty = FALSE,
  ...
)
}
\arguments{
\item{data}{A dataframe containing light logger data imported with LightLogR}

\item{metric}{The name of the metric column to create in the output. Expects
a \code{character}}

\item{Variable}{The variable column to analyze. Expects a \code{symbol}. Needs to
be part of the dataset.}

\item{Weekend.type}{A (new) column in the dataframe that specifies the day of
the week as a factor}

\item{Datetime.colname}{Column name containing datetime values. Defaults to
\code{Datetime}}

\item{metric_type}{The metric function to apply, default is
\code{\link[=duration_above_threshold]{duration_above_threshold()}}}

\item{prefix}{String that is the prefix on summarized values}

\item{filter.empty}{Filter out empty rows. Default is FALSE}

\item{...}{Additional arguments passed to the metric function}
}
\value{
A dataframe with three rows representing average weekday, weekend,
and mean daily values for the specified metric
}
\description{
\code{mean_daily_metric} is a convenience wrapper around \code{mean_daily} that
summarizes data imported with LightLogR per weekday and calculates mean daily
values for a specific metric. Examples include \code{\link[=duration_above_threshold]{duration_above_threshold()}}
(the default), or \code{\link[=durations]{durations()}}.
}
\examples{
# Import sample data
filepath <- system.file("extdata/sample_data_LYS.csv", package = "LightLogR")
dataset <- import$LYS(filepath, silent = TRUE)

# Calculate mean daily duration above threshold. As the data only contains
# data for two days, Weekend and Mean daily will throw NA
dataset |> 
mean_daily_metric(
  metric = "duration_above_100lux",
  Variable = lux,
  threshold = 100
)

# again with another dataset
sample.data.environment |> 
  mean_daily_metric(
  metric = "duration_above_250lux",
  Variable = MEDI,
  threshold = 250)

}
